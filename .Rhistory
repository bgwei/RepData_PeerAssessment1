download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","idahohousing.csv")
idaho <- read.csv("idahohousing.csv")
head(idaho)
head(idaho$VAL)
?count
count(idaho,VAL = 24)
library(plyr)
count(idaho,VAL = 24)
count(idaho,VAL)
count(idaho$VAL,24)
?read
power <- read.table("household_power_consumption.txt", sep = ";")
head(power)
?hist
hist(power$Global_active_power)
hist(power$V3)
power$V3
head(power$v3)
hist(power$V3)
head(power$V3)
head(power$V3[2,])
power$V3[2]
power$V3[1]
?read.table
power <- read.table("household_power_consumption.txt", header = TRUE, sep = ";")
head(power)
hist(power$Global_active_power,col="Red")
head(power%Global_active_power)
head(power$Global_active_power)
?hist
?contains
gap <- power$Global_active_power
gap2 <- as.numeric(gap)
hist(gap2)
hist(gap2,col = "Red")
?hist
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
power[66637]
power[,66637]
power[66637,]
source('~/DataScienceR/plot1.R')
power$Global_active_power[66637]
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
?read.table
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
max(gap)
power$Global_active_power[66637:69516]
power[66637:69516]
power[66637:69516,]
power[,66637:69516]
power[69516]
power[,69516]
power[69516,]
power%Global_active_power[69516]
power$Global_active_power[69516]
max(gap)
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot1.R')
dev.off()
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot2.R')
?as.Date
source('~/DataScienceR/plot2.R')
?lubridate
??lubridate
source('~/DataScienceR/plot2.R')
source('~/DataScienceR/plot2.R')
source('~/DataScienceR/plot2.R')
plot
?plot
source('~/DataScienceR/plot2.R')
head(power)
source('~/DataScienceR/plot2.R')
source('~/DataScienceR/plot2.R')
source('~/DataScienceR/plot2.R')
source('~/DataScienceR/plot2.R')
source('~/DataScienceR/plot2.R')
?plot
source('~/DataScienceR/plot2.R')
source('~/DataScienceR/plot2.R')
source('~/DataScienceR/plot2.R')
source('~/DataScienceR/plot2.R')
source('~/DataScienceR/plot2.R')
source('~/DataScienceR/plot4.R')
source('~/DataScienceR/plot4.R')
?legend
source('~/DataScienceR/plot4.R')
source('~/DataScienceR/plot4.R')
source('~/DataScienceR/plot4.R')
legend?
ds
?legends
?legend
?lty
?par
?parameter
??lty
source('~/DataScienceR/plot4.R')
source('~/DataScienceR/plot4.R')
?legend
source('~/DataScienceR/plot4.R')
source('~/DataScienceR/plot4.R')
source('~/DataScienceR/plot4.R')
source('~/DataScienceR/plot3.R')
par(mfrow = c(1,1))
source('~/DataScienceR/plot3.R')
source('~/DataScienceR/plot3.R')
dev.off()
dev.off()
source('~/DataScienceR/plot3.R')
?legend
source('~/DataScienceR/plot3.R')
source('~/DataScienceR/plot3.R')
source('~/DataScienceR/plot3.R')
legend
?legend
source('~/DataScienceR/plot3.R')
source('~/DataScienceR/plot3.R')
?legend
source('~/DataScienceR/plot3.R')
source('~/DataScienceR/plot3.R')
?legend
source('~/DataScienceR/plot3.R')
source('~/DataScienceR/plot4.R')
?parameter
?parameters
source('~/DataScienceR/plot4.R')
?dev.copy
source('~/DataScienceR/plot4.R')
source('~/DataScienceR/plot3.R')
source('~/DataScienceR/plot4.R')
source('~/DataScienceR/plot2.R')
source('~/DataScienceR/plot1.R')
source('~/DataScienceR/plot3.R')
source('~/DataScienceR/plot4.R')
?par
source('~/DataScienceR/plot3.R')
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
biocLite("rhdf5")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library("rhdf5")
created = h5createFile("example.h5")
created
library(lubridate)
?since
?lubridate
date <- mdy(08/24/2010)
date <- mdy("08/24/2013")
now <- now()
period <- as.period (now-date)
period
date
date <- mdy("08/24/2010")
as.interval(now-date)
interval <- (date,now)
period <- as.period(now-date)
period
days(period)
4*365
+174
1460+174
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "5f3a0b88ba506af53a67")
?oauth_app
oauth_app(appname,"5f3a0b88ba506af53a67", "b15d0880d0c8763d4b74629a7b127261508db34a")
oauth_app("github","5f3a0b88ba506af53a67", "b15d0880d0c8763d4b74629a7b127261508db34a")
myapp <- oauth_app("github","5f3a0b88ba506af53a67", "b15d0880d0c8763d4b74629a7b127261508db34a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req
gtoken
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
gtoken <- config(token = github_token)
req
github_token
myapp
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
gtoken
req
github_token
oauth_endpoints
myapp <- oauth_app("github","5f3a0b88ba506af53a67", secret = "b15d0880d0c8763d4b74629a7b127261508db34a")
myapp
github_token
myapp <- oauth_app("Gopher Test","5f3a0b88ba506af53a67", secret = "b15d0880d0c8763d4b74629a7b127261508db34a")
github_token
myapp <- oauth_app("github","5f3a0b88ba506af53a67", secret = "b15d0880d0c8763d4b74629a7b127261508db34a")
myapp <- oauth_app("github","5f3a0b88ba506af53a67", secret = "b15d0880d0c8763d4b74629a7b127261508db34a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
github_token
myapp
myapp <- oauth_app("github", "5f3a0b88ba506af53a67")
library(httr)
myapp <- oauth_app("github", "5f3a0b88ba506af53a67")
GITHUB_CONSUMER_SECRET <- "b15d0880d0c8763d4b74629a7b127261508db34a"
myapp <- oauth_app("github", "5f3a0b88ba506af53a67")
myapp <- oauth_app("github", "5f3a0b88ba506af53a67", secret = "b15d0880d0c8763d4b74629a7b127261508db34a")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
?envvars
Sys.setenv(GITHUB_CONSUMER_SECRET = "b15d0880d0c8763d4b74629a7b127261508db34a")
myapp <- oauth_app("github", "5f3a0b88ba506af53a67")
myapp
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
gtoken <- config(token = github_token)
gtoken
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
req
gtoken
Sys.getenv(GITHUB_CONSUMER_SECRET)
test = blah
print(Sys.setenv(GITHUB_CONSUMER_SECRET = "b15d0880d0c8763d4b74629a7b127261508db34a"))
Sys.getenv(GITHUB_CONSUMER_SECRET)
Sys.getenv(R_TEST)
Sys.setenv(R_TEST = "testit")
Sys.getenv(R_TEST)
Sys.setenv(R_TEST = "testit", "A+C" = 123)
Sys.getenv(R_TEST)
Sys.getenv("GITHUB_CONSUMER_SECRET")
Sys.getenv("GITHUB_CONSUMER_SECRET")
oauth_endpoints("github")
myapp <- oauth_app("github", "5f3a0b88ba506af53a67")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
?oauth2.0_token
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache = FALSE)
install.packages("httpuv")
library(httpuv)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache = FALSE)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
head(req)
head(content(req))
yay <- content(req)
yay$name
library(sqldf)
install.packages(sqldf)
?sqldf
sqldf("select pwgtp1 from acs")
install.packages("sqldf")
url <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
survey <- read.csv(url)
sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
acs <- survey
sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
url2 = "http://biostat.jhsph.edu/~jleek/contact.html"
html2 = GET(url2)
content2 = content(html2,as = "text")
content2
html = htmlParse(content2, asText = TRUE)
library(httr)
html = htmlParse(content2, asText = True)
library(XML)
install.packages."XML"
install.packages("XML")
library(XML)
library(XML)
content2
html = htmlTreeParse(url2, useInternalNodes = T)
library(html)
htmlQ = readLines(url2)
html2
htmlQ
?nchar
htmlQ[180]
nchar(htmlQ[10])
nchar(htmlQ[20])
nchar[htmlQ[100]]
nchar(htmlQ[100])
nchar(htmlQ[30])
finalurl = "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
finalset <- GET(finalurl)
finalset
finalset[4]
testing <- read.table(finalurl)
testing <- read.table(finalurl,skip = 1)
?read.table
testcontent <- readLines(finalurl)
testcontent
head(testcontent)
read.table(testcontent, skip = 3)
testcontent[5]
testcontent[5][8]
testcontent[5,3]
as.table(testcontent)
?as.table
25*1258
pwd
pwd()
?setwd
getwd()
cd ..
cd .
setwd("C:/Users/bgwei/RepData_PeerAssessment1")
ls
?read.csv
activity_table <- read.csv("activity.csv")
activity_table[1,]
activity_table[2,]
activity_table
head(activity_table)
activity_table$date
?level
?sum
?sort
?split
head(activity_Table)
head(activity_table)
test <- split(activity_table$steps,activity_table$date)
test
?lapply
head(test)
sum(test)
sum(test[1])
sum(test$`2012-10-06`)
total_steps <- lapply(test,sum,na.rm=TRUE)
total_steps
total_steps2 <- sapply(test,sum,na.rm=TRUE)
total_steps2
?hist
hist(total_steps2)
head(activity_table)
?head
tail(activity_Table)
tail(activity_table)
interval_steps <- split(activity_table$steps,activity_table$interval)
interval_steps
?plot
split_by_interval <- split(activity_table$steps,activity_table$interval)
average_steps_by_interval <- sapply(split_by_interval,mean,na.rm = TRUE)
head(average_steps_by_interval)
tail(average_steps_by_interval)
?sapply
plot(average_steps_by_interval)
?sapply
?label
?vector
names(average_steps_by_interval
)
plot(as.numeric(names(average_steps_by_interval)),average_steps_by_interval,type = "1")
plot(as.numeric(names(average_steps_by_interval)),average_steps_by_interval,type = "l")
summary(average_steps_by_interval)
plot(as.numeric(names(average_steps_by_interval)),average_steps_by_interval,type = "l",
xlab = Time of Day, ylab = Average Steps)
?as.time
?striptime
?strptime
names <- names(average_steps_by_interval)
head(names)
test4 <- strptime(names)
library(lubridate)
?lubridate
max(average_steps_by_interval)
name(max(average_steps_by_interval))
names(max(average_steps_by_interval))
?index
?max
?names
??index
?which
?which.max
which.max(max(average_steps_by_interval))
which.max(average_steps_by_interval)
average_steps_by_interval[104]
max_loc <- which.max(average_steps_by_interval)
max_loc
max_loc[1]
names(max_loc)
?count
?na
??na
summary(activity_table)
head(activity_table)
tail(activity_table)
activity_table
summary(average_steps_by_interval)
?if
sdf
??if
/sdaf/sd
activity_table$steps[1:5]
activity_table$steps[1:50]
activity_table$steps[1:200]
activity_table$steps[1:1000]
average_steps_by_interval
average_steps_by_interval[2330]
average_steps_by_interval["2330"]
names(activity_table$steps[1000])
?length
length(activity_table)
length(activity_table$steps)
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
activity_table$interval[0]
activity_table$interval[1]
head(average_steps_by_interval)
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
head(activity_Table)
head(activity_table)
is.na(activity_table$steps[0])
activity_table$steps[0]
activity_table$steps
head(activity_table$steps)
head(is.na(activity_table$steps))
is.na(activity_table$steps[0])
activity_table$steps[1]
is.na(activity_table$steps[1])
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
head(average_steps_by_interval)
activity_table$interval[1]
average_steps_by_interval[activity_table$interval[1]]
average_steps_by_interval"0"
average_steps_by_interval["1"]
average_steps_by_interval["0"]
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
head(activity_table)
average_steps_by_interval[as.character(activity_table$interval[i])]
average_steps_by_interval[as.character(activity_table$interval[1])]
?value
activity_table$steps[1]
activity_table$steps[1] <- average_steps_by_interval[as.character(activity_table$interval[1])]
head(activity_table)
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
head(activity_table)
summary(activity_table)
?factor
factor(c("Weekday","Weekend"))
?weekdays()
head(activity_table$date)
activity_table$Weektime <- weekdays(activity_table$date)
test100 <- activity_table$date[1]
test100
as.character(test100)
test101 <- strftime(test100)
test101
weekdays(test101)
?weekdays
test102 <- weekdays(test101)
test101
test102
test102 <- strptime(test100)
?strptime
test102 <- strptime(test100, "%Y-%m-%d")
test102
test103 <- weekdays(test102)
test103
?lubridate
wday(test102)
wday(test103)
wday(test102,label=TRUE)
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
head(activity_table)
tail(activity_table)
activity_table[100:1000]
yyy <- split(activity_table$Weektime)
yyy <- split(activity_table,activity_table$Weektime)
head[yyy]
head(yyy)
summary(Weektime)
summary(yyy)
head(yyy$Weekday)
head(yyy$Weekend)
yyy
head(yyy$Weekend)
head(yyy$Weekend$Interval)
endtest <- yyy$Weekend
head(endtest)
head(endtest$interval)
split(endtest$steps,endtest$interval)
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
source('C:/Users/bgwei/RepData_PeerAssessment1/test_script.R')
